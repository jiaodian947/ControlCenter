{"version":3,"sources":["webpack:///./src/utils/index.js"],"names":["fmt","date","o","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"mappings":"0DAwEO,SAAiBA,EAAKC,GAE3B,IAAIC,GACFC,KAAMF,EAAKG,WAAa,EACxBC,KAAMJ,EAAKK,UACXC,KAAMN,EAAKO,WACXC,KAAMR,EAAKS,aACXC,KAAMV,EAAKW,aACXC,KAAMC,KAAKC,OAAOd,EAAKG,WAAa,GAAK,GACzCY,EAAGf,EAAKgB,mBAEN,OAAOC,KAAKlB,KACdA,EAAMA,EAAImB,QACRC,OAAOC,IACNpB,EAAKqB,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,UAGnD,IAAK,IAAIC,KAAKvB,EACR,IAAIkB,OAAO,IAAMK,EAAI,KAAKP,KAAKlB,KACjCA,EAAMA,EAAImB,QACRC,OAAOC,GACc,IAArBD,OAAOC,GAAGG,OAAetB,EAAEuB,IAAM,KAAOvB,EAAEuB,IAAIF,QAAQ,GAAKrB,EAAEuB,IAAID,UAIvE,OAAOxB","file":"static/js/0.55a57cdfbae1d30a9bc9.js","sourcesContent":["/**\n * Created by jiachenpan on 16/11/18.\n */\n\nexport function parseTime(time, cFormat) {\n  if (arguments.length === 0) {\n    return null;\n  }\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  let date;\n  if (typeof time === 'object') {\n    date = time;\n  } else {\n    if (('' + time).length === 10) time = parseInt(time) * 1000;\n    date = new Date(time);\n  }\n  const formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n    let value = formatObj[key];\n    if (key === 'a') {\n      return ['一', '二', '三', '四', '五', '六', '日'][value - 1];\n    }\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n    return value || 0;\n  });\n  return time_str;\n}\n\nexport function formatTime(time, option) {\n  time = +time * 1000;\n  const d = new Date(time);\n  const now = Date.now();\n\n  const diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return (\n      d.getMonth() +\n      1 +\n      '月' +\n      d.getDate() +\n      '日' +\n      d.getHours() +\n      '时' +\n      d.getMinutes() +\n      '分'\n    );\n  }\n}\n// 时间格式化\nexport function dateFtt(fmt, date) {\n  // author: meizz\n  var o = {\n    'M+': date.getMonth() + 1, // 月份\n    'd+': date.getDate(), // 日\n    'h+': date.getHours(), // 小时\n    'm+': date.getMinutes(), // 分\n    's+': date.getSeconds(), // 秒\n    'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\n    S: date.getMilliseconds() // 毫秒\n  };\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + '').substr(4 - RegExp.$1.length)\n    );\n  }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\n      );\n    }\n  }\n  return fmt;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js"],"sourceRoot":""}